name: Create and publish a Docker image, and deploy on server

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - main
    tags:
      - v*

  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "warning"

env:
  IMAGE_NAME: MixusMinimax/angular-website
  REGISTRY: ghcr.io
  SSH_HOST: barmetler.com
  SSH_PORT: 22
  SSH_USERNAME: github

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to the Container registry
        uses: docker/login-action@v1.10.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extracts metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3.5.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2.7.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: angular-website
    permissions:
      packages: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to the Container registry
        uses: docker/login-action@v1.10.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extracts metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3.5.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Deploy to Digital Ocean using ssh
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: $${{ env.SSH_HOST }}
          port: ${{ env.SSH_PORT }}
          username: ${{ env.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            IMAGE_TAG=${{ fromJSON(steps.meta.outputs.json).tags[0] }}

            echo IMAGE_TAG=$IMAGE_TAG

            if [ "$(docker ps -q -f name=angular-website)" ]; then
              docker rm -f angular-website
            fi

            docker pull $IMAGE_TAG
            docker run -d \
            --restart always \
            --name angular-website \
            --publish 8080:80 \
            $IMAGE_TAG